{"mappings":"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","sources":["./src/models/helpers.ts","./src/sprites/index.ts","./src/views/colours.ts","./src/sprites/lily.ts","./src/sprites/car.ts","./src/models/level.ts","./src/sounds.ts","./src/sprites/frog.ts","./src/sprites/splosh.ts","./src/sprites/splat.ts","./src/sprites/home.ts","./src/models/pendingResult.ts","./src/models/game.ts","./src/views/helpers/polar.ts","./src/views/game.ts","./src/controllers/game.ts","./src/main.ts","./src/controllers/title.ts"],"sourcesContent":["export const normaliseAngle = (t: number) => {\n    return (t + (2 * Math.PI)) % (2 * Math.PI);\n}\n\nexport const angularDistance = (t1: number, t2: number) => {\n    if (t1 < t2) {\n        return Math.min(t2 - t1, t1 + (2 * Math.PI) - t2);\n    } else {\n        return Math.min(t1 - t2, t2 + (2 * Math.PI) - t1);\n    }\n}\n\nexport const range = (length: number):number[] => {\n    const arr = [];\n    for (let i = 0; i < length; ++i) {\n        arr.push(i);\n    }\n    return arr;\n};\n\nexport function shuffle<T>(array: Array<T>) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n","import { Model } from \"../models\";\nimport { normaliseAngle } from \"../models/helpers\";\n\nexport abstract class Sprite implements Model {\n    r: number;\n    t: number;\n    speed: number;\n    private _renderUnit: number;\n    private _frames: HTMLCanvasElement[];\n    private lastUpdate: number = 0;\n\n    constructor(r:number, t:number, speed:number) {\n        this.r = r;\n        this.t = t;\n        this.speed = speed;\n    }\n\n    update(time: number) {\n        this.t = normaliseAngle(this.t + (this.speed * (time - this.lastUpdate) / 1000));\n        this.lastUpdate = time;\n    }\n\n    abstract get facing(): number;\n\n    get frameIndex():number {\n        return 0;\n    }\n\n    abstract renderFrame(frameIndex: number, unit: number): HTMLCanvasElement;\n\n    getCurrentFrame(unit: number): HTMLCanvasElement {\n        const frameIndex = this.frameIndex;\n\n        if (unit !== this._renderUnit) {\n            this._renderUnit = unit;\n            this._frames = [];\n        }\n\n        if (!this._frames[frameIndex]) {\n            this._frames[frameIndex] = this.renderFrame(frameIndex, unit);\n        }\n\n        return this._frames[frameIndex];\n    }\n}\n\nexport abstract class FiniteSprite extends Sprite {\n    abstract active: boolean;\n}","export default {\n    LAND: '#009900',\n    POND: '#2222cc',\n    ROAD: '#666666',\n    LILY: '#009900',\n    FROG: '#77dd00'\n}","import { Sprite } from \".\";\nimport colours from \"../views/colours\";\n\nexport class Lily extends Sprite {\n    private _facing: number;\n\n    constructor(r:number, t:number, speed:number) {\n        super(r, t, speed);\n        this._facing = Math.random() * 2 * Math.PI;\n    }\n\n    update(time: number) {\n        super.update(time);\n    }\n\n    get facing(): number {\n        return this._facing + this.t;\n    }\n\n    renderFrame(i: number, unit: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = unit;\n        canvas.height = unit;\n    \n        const ctx = canvas.getContext('2d');\n    \n        ctx.fillStyle = colours.LILY;\n        ctx.beginPath();\n        ctx.moveTo(unit / 2, unit / 2);\n        ctx.bezierCurveTo(unit, unit / 2, unit * 7 / 8, unit * 15/16, unit / 2, unit * 15/16);\n        ctx.arc(unit / 2, unit / 2, unit * 21 / 48, Math.PI / 2, 3 * Math.PI / 2);\n        ctx.bezierCurveTo(unit * 7 / 8, unit / 16, unit, unit / 2, unit / 2, unit / 2);\n        ctx.fill();\n    \n        return canvas;\n    }\n}\n","import { Sprite } from \".\";\n\nexport class Car extends Sprite {\n    private _frame: HTMLCanvasElement;\n    private _unit: number;\n\n    constructor(r:number, t:number, speed:number) {\n        super(r, t, speed);\n    }\n\n    update(time: number) {\n        super.update(time);\n    }\n\n    get facing(): number {\n        return this.t + Math.PI / 2;\n    }\n\n    renderFrame(i: number, unit: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = unit;\n        canvas.height = unit;\n    \n        const ctx = canvas.getContext('2d');\n    \n        ctx.fillStyle = '#ccccff';\n        ctx.fillRect(0, unit / 4, unit, unit / 2);\n    \n        ctx.fillStyle = '#333333';\n        ctx.beginPath();\n        ctx.moveTo(unit / 4, unit / 4);\n        ctx.lineTo(unit / 4, unit * 3 / 4);\n        ctx.lineTo(unit * 3 / 8, unit * 11/16);\n        ctx.lineTo(unit * 3 / 8, unit * 5/16);\n        ctx.lineTo(unit / 4, unit / 4);\n        ctx.fill();\n    \n        ctx.beginPath();\n        ctx.moveTo(unit * 3 / 4, unit / 4);\n        ctx.lineTo(unit * 3 / 4, unit * 3 / 4);\n        ctx.lineTo(unit * 5 / 8, unit * 11/16);\n        ctx.lineTo(unit * 5 / 8, unit * 5/16);\n        ctx.lineTo(unit * 3 / 4, unit / 4);\n        ctx.fill();\n    \n        ctx.fillStyle = '#ccff99';\n        ctx.beginPath();\n        ctx.moveTo(unit * 31 / 32, unit / 4);\n        ctx.lineTo(unit * 31 / 32, unit * 11 / 32);\n        ctx.lineTo(unit, unit * 3 / 8);\n        ctx.lineTo(unit, unit / 4);\n        ctx.lineTo(unit * 31 / 32, unit / 4);\n        ctx.fill();\n    \n        ctx.beginPath();\n        ctx.moveTo(unit * 31 / 32, unit * 3 / 4);\n        ctx.lineTo(unit * 31 / 32, unit * 21 / 32);\n        ctx.lineTo(unit, unit * 5 / 8);\n        ctx.lineTo(unit, unit * 3 / 4);\n        ctx.lineTo(unit * 31 / 32, unit * 3 / 4);\n        ctx.fill();\n    \n        ctx.fillStyle = '#ff6633';\n        ctx.beginPath();\n        ctx.moveTo(unit / 32, unit / 4);\n        ctx.lineTo(unit / 32, unit * 11 / 32);\n        ctx.lineTo(0, unit * 3 / 8);\n        ctx.lineTo(0, unit / 4);\n        ctx.lineTo(unit / 32, unit / 4);\n        ctx.fill();\n    \n        ctx.beginPath();\n        ctx.moveTo(unit / 32, unit * 3 / 4);\n        ctx.lineTo(unit / 32, unit * 21 / 32);\n        ctx.lineTo(0, unit * 5 / 8);\n        ctx.lineTo(0, unit * 3 / 4);\n        ctx.lineTo(unit / 32, unit * 3 / 4);\n        ctx.fill();\n    \n        return canvas;\n    }\n}","import { Model } from \".\";\nimport { Lily } from \"../sprites/lily\";\nimport { Car } from \"../sprites/car\";\nimport { range, shuffle } from \"./helpers\";\nimport { Home } from \"../sprites/home\";\n\nexport class Level implements Model {\n    lilies: Array<Lily>\n    cars: Array<Car>\n    homes: Array<Home>\n    difficulty: number;\n\n    constructor(difficulty) {\n        this.homes = [];\n        this.difficulty = difficulty;\n    }\n\n    populate(grid) {\n        this.lilies = [];\n        this.cars = [];\n        for (let r = 0; r < grid.length; ++r) {\n            const type = grid[r].type\n            const length = 2 * Math.PI * r;\n            if (type === 'pond') {\n                this.populateRow(\n                    Math.floor(length),\n                    0.7 - (0.1 * this.difficulty),\n                    t => this.lilies.push(new Lily(r, t, grid[r].speed)))\n            } else if (type === 'road') {\n                this.populateRow(\n                    Math.floor(length) / 2,\n                    0.225 + (0.075 * this.difficulty),\n                    t => this.cars.push(new Car(r, t, grid[r].speed)))\n            }\n        }\n    }\n\n    populateRow(spaces, density, addAtAngle: (number) => void) {\n        const step = 2 * Math.PI / spaces;\n        const offset = step * Math.random();\n\n        const allSpaces = range(spaces);\n        shuffle(allSpaces);\n        for (let i = 0; i < Math.max(1, Math.round(density * spaces)); ++i) {\n            addAtAngle(offset + (allSpaces[i] * step));\n        }\n    }\n\n    update(time: number) {\n        for (let lilies of this.lilies) {\n            lilies.update(time);\n        }\n        for (let car of this.cars) {\n            car.update(time);\n        }\n    }\n\n    completed() {\n        for (let i = 0; i < 4; ++i) {\n            if (!this.homes[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n","export const gameOver = document.getElementById('game-over') as HTMLAudioElement;\nexport const levelWin = document.getElementById('level-win') as HTMLAudioElement;\n\nexport const jumpR = new SoundEffect({\n    \"oldParams\": true,\n    \"wave_type\": 0,\n    \"p_env_attack\": 0,\n    \"p_env_sustain\": 0.23790408740057073,\n    \"p_env_punch\": 0,\n    \"p_env_decay\": 0.23742654976387143,\n    \"p_base_freq\": 0.35279296596298354,\n    \"p_freq_limit\": 0,\n    \"p_freq_ramp\": 0.22212611651772876,\n    \"p_freq_dramp\": 0,\n    \"p_vib_strength\": 0,\n    \"p_vib_speed\": 0,\n    \"p_arp_mod\": 0,\n    \"p_arp_speed\": 0,\n    \"p_duty\": 0.08977132908551474,\n    \"p_duty_ramp\": 0,\n    \"p_repeat_speed\": 0,\n    \"p_pha_offset\": 0,\n    \"p_pha_ramp\": 0,\n    \"p_lpf_freq\": 0.9585511505376012,\n    \"p_lpf_ramp\": 0,\n    \"p_lpf_resonance\": 0,\n    \"p_hpf_freq\": 0,\n    \"p_hpf_ramp\": 0,\n    \"sound_vol\": 0.05,\n    \"sample_rate\": 44100,\n    \"sample_size\": 8\n}).generate();\n\nexport const jumpT = new SoundEffect({\n    \"oldParams\": true,\n    \"wave_type\": 0,\n    \"p_env_attack\": 0.0445166877130032,\n    \"p_env_sustain\": 0.182,\n    \"p_env_punch\": 0.10037611077683314,\n    \"p_env_decay\": 0.17291769967457804,\n    \"p_base_freq\": 0.284,\n    \"p_freq_limit\": 0,\n    \"p_freq_ramp\": 0.2581458048953463,\n    \"p_freq_dramp\": -0.03479503611813755,\n    \"p_vib_strength\": -0.016859700378325626,\n    \"p_vib_speed\": 0.04043729272790919,\n    \"p_arp_mod\": 0,\n    \"p_arp_speed\": 0.027968309460605065,\n    \"p_duty\": 0.07187342654588062,\n    \"p_duty_ramp\": -0.015354511394665753,\n    \"p_repeat_speed\": 0.008715131175503689,\n    \"p_pha_offset\": 0,\n    \"p_pha_ramp\": -0.01477404807986183,\n    \"p_lpf_freq\": 0.9245540490762989,\n    \"p_lpf_ramp\": 0,\n    \"p_lpf_resonance\": -0.029204293848175113,\n    \"p_hpf_freq\": -0.04836648556820207,\n    \"p_hpf_ramp\": 0.04539141664879946,\n    \"sound_vol\": 0.03,\n    \"sample_rate\": 44100,\n    \"sample_size\": 8,\n    \"p_vib_delay\": null\n}).generate();\n\nexport const block = new SoundEffect({\n    \"oldParams\": true,\n    \"wave_type\": 1,\n    \"p_env_attack\": -0.10507501589322304,\n    \"p_env_sustain\": -0.02090104386290121,\n    \"p_env_punch\": -0.08522625289508615,\n    \"p_env_decay\": 0.14847480374082322,\n    \"p_base_freq\": 0.278,\n    \"p_freq_limit\": 0,\n    \"p_freq_ramp\": -0.3261401811737207,\n    \"p_freq_dramp\": -0.08149403635273286,\n    \"p_vib_strength\": 0.15372530122023925,\n    \"p_vib_speed\": 0.044762670361304165,\n    \"p_arp_mod\": 0.07983469053673184,\n    \"p_arp_speed\": -0.06772189083356792,\n    \"p_duty\": 1.0134741774733813,\n    \"p_duty_ramp\": 0.06581424438315048,\n    \"p_repeat_speed\": -0.030078433476900687,\n    \"p_pha_offset\": -0.010561412711320849,\n    \"p_pha_ramp\": 0.1393454513678244,\n    \"p_lpf_freq\": 0.9128060506438345,\n    \"p_lpf_ramp\": 0.09389936807290761,\n    \"p_lpf_resonance\": 0.022954887628406438,\n    \"p_hpf_freq\": 0.13848287656881175,\n    \"p_hpf_ramp\": 0.16837606616867193,\n    \"sound_vol\": 0.05,\n    \"sample_rate\": 44100,\n    \"sample_size\": 8,\n    \"p_vib_delay\": null\n}).generate();\n\nexport const splat = new SoundEffect({\n    \"oldParams\": true,\n    \"wave_type\": 3,\n    \"p_env_attack\": 0,\n    \"p_env_sustain\": 0.16275918690389046,\n    \"p_env_punch\": 0.4181439868076769,\n    \"p_env_decay\": 0.3937628266069797,\n    \"p_base_freq\": 0.0887978690655948,\n    \"p_freq_limit\": 0,\n    \"p_freq_ramp\": -0.24625452022168354,\n    \"p_freq_dramp\": 0,\n    \"p_vib_strength\": 0.6460666133410728,\n    \"p_vib_speed\": 0.36787990392998804,\n    \"p_arp_mod\": 0,\n    \"p_arp_speed\": 0,\n    \"p_duty\": 0,\n    \"p_duty_ramp\": 0,\n    \"p_repeat_speed\": 0.3053632788342427,\n    \"p_pha_offset\": 0,\n    \"p_pha_ramp\": 0,\n    \"p_lpf_freq\": 1,\n    \"p_lpf_ramp\": 0,\n    \"p_lpf_resonance\": 0,\n    \"p_hpf_freq\": 0,\n    \"p_hpf_ramp\": 0,\n    \"sound_vol\": 0.05,\n    \"sample_rate\": 44100,\n    \"sample_size\": 8\n}).generate();\n\nexport const splosh = new SoundEffect({\n    \"oldParams\": true,\n    \"wave_type\": 3,\n    \"p_env_attack\": 0.18361080687186188,\n    \"p_env_sustain\": 0.475,\n    \"p_env_punch\": 0.2688713365691784,\n    \"p_env_decay\": -0.49955351786356567,\n    \"p_base_freq\": 0.197443722148863,\n    \"p_freq_limit\": 0,\n    \"p_freq_ramp\": -0.34091185436175064,\n    \"p_freq_dramp\": -0.6583108339121865,\n    \"p_vib_strength\": 0.6644403993561854,\n    \"p_vib_speed\": 0.46313306281994804,\n    \"p_arp_mod\": 1.049701479528293,\n    \"p_arp_speed\": 0.07119298584128436,\n    \"p_duty\": -0.898637327654658,\n    \"p_duty_ramp\": -0.33434290461943594,\n    \"p_repeat_speed\": 0.811851938742117,\n    \"p_pha_offset\": 0.12097497386897631,\n    \"p_pha_ramp\": -0.2249877420659818,\n    \"p_lpf_freq\": 0.9580803989127105,\n    \"p_lpf_ramp\": 0.18450093351885394,\n    \"p_lpf_resonance\": 0.6089097845082919,\n    \"p_hpf_freq\": 0.17663025125638,\n    \"p_hpf_ramp\": -0.1637768091693596,\n    \"sound_vol\": 0.05,\n    \"sample_rate\": 44100,\n    \"sample_size\": 8,\n    \"p_vib_delay\": 0.0239014190378245\n}).generate();\n\nexport const home = new SoundEffect({\n    \"oldParams\": true,\n    \"wave_type\": 2,\n    \"p_env_attack\": -0.07709042364688073,\n    \"p_env_sustain\": 0.5559012545028557,\n    \"p_env_punch\": -0.03785915223003236,\n    \"p_env_decay\": 0.47872655478891984,\n    \"p_base_freq\": 0.5254855689550934,\n    \"p_freq_limit\": 0,\n    \"p_freq_ramp\": 0.172,\n    \"p_freq_dramp\": -0.0761164330737989,\n    \"p_vib_strength\": 0.2553857611577285,\n    \"p_vib_speed\": 0.4511785948800326,\n    \"p_arp_mod\": -0.12506992008795906,\n    \"p_arp_speed\": 0.02174306929946864,\n    \"p_duty\": 0.9880129073303545,\n    \"p_duty_ramp\": -0.021844479976788914,\n    \"p_repeat_speed\": 0,\n    \"p_pha_offset\": 0.00021312082402093896,\n    \"p_pha_ramp\": -0.01148161826013061,\n    \"p_lpf_freq\": 1,\n    \"p_lpf_ramp\": 0.01333066355030281,\n    \"p_lpf_resonance\": 0.025755361275815195,\n    \"p_hpf_freq\": 0.007392503783877638,\n    \"p_hpf_ramp\": 0.01888195533070447,\n    \"sound_vol\": 0.05,\n    \"sample_rate\": 44100,\n    \"sample_size\": 8,\n    \"p_vib_delay\": null\n}).generate();","import { Sprite } from \".\";\nimport * as sounds from '../sounds';\nimport colours from \"../views/colours\";\n\nexport class Frog extends Sprite {\n    active: boolean = true;\n    maxR: number = 0;\n    lastSound = null;\n\n    end() {\n        this.active = false;\n    }\n\n    moveClockwise() {\n        if (this.active) {\n            this.t += this.jumpAngle();\n            this.lastSound = sounds.jumpT;\n        }\n    }\n\n    moveAntiClockwise() {\n        if (this.active) {\n            this.t -= this.jumpAngle();\n            this.lastSound = sounds.jumpT;\n        }\n    }\n\n    moveOut() {\n        if (this.active) {\n            this.r += 1;\n            this.lastSound = sounds.jumpR;\n        }\n    }\n\n    moveIn() {\n        if (this.active) {\n            this.r = Math.max(this.r - 1, 0);\n            this.lastSound = sounds.jumpR;\n        }\n    }\n\n    get facing(): number {\n        return this.t;\n    }\n\n    private jumpAngle() {\n        return Math.PI / 3 / Math.max(1, this.r);\n    }\n\n    renderFrame(i: number, unit: number): HTMLCanvasElement {\n        return Frog.render(unit, colours.FROG);\n    }\n\n    static render(unit:number, colour: string): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = unit;\n        canvas.height = unit;\n    \n        const ctx = canvas.getContext('2d');\n    \n        ctx.strokeStyle = colour;\n        ctx.lineWidth = 3;\n        ctx.lineCap = \"round\";\n        ctx.beginPath();\n        ctx.moveTo(0.1 * unit, 0.2 * unit);\n        ctx.lineTo(0.4 * unit, 0.2 * unit);\n        ctx.lineTo(0.7 * unit, 0.8 * unit);\n        ctx.lineTo(0.9 * unit, 0.8 * unit);\n\n        ctx.moveTo(0.1 * unit, 0.8 * unit);\n        ctx.lineTo(0.4 * unit, 0.8 * unit);\n        ctx.lineTo(0.7 * unit, 0.2 * unit);\n        ctx.lineTo(0.9 * unit, 0.2 * unit);\n        ctx.stroke();\n\n        ctx.fillStyle = colour;\n        ctx.beginPath();\n        ctx.ellipse(unit / 2, unit / 2, unit * 4 / 12, unit * 3 / 12, 0, 0, 2 * Math.PI);\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.ellipse(unit * 3 / 4, unit * 3 / 8, unit * 3 / 32, unit * 3 / 32, 0, 0, 2 * Math.PI);\n        ctx.ellipse(unit * 3 / 4, unit * 5 / 8, unit * 3 / 32, unit * 3 / 32, 0, 0, 2 * Math.PI);\n        ctx.fill();\n\n        ctx.fillStyle = '#000000';\n        ctx.beginPath();\n        ctx.ellipse(unit * 3 / 4, unit * 3 / 8, unit / 16, unit / 16, 0, -Math.PI / 2, Math.PI / 2);\n        ctx.ellipse(unit * 3 / 4, unit * 5 / 8, unit / 16, unit / 16, 0, -Math.PI / 2, Math.PI / 2);\n        ctx.fill();\n    \n        return canvas;\n    }\n}","import { Sprite, FiniteSprite } from \".\";\n\nexport class Splosh extends Sprite implements FiniteSprite {\n    active: boolean = true;\n    startTime: number;\n    private _frame: number;\n\n    constructor(r:number, t:number, time: number) {\n        super(r, t, 0);\n        this.startTime = time;\n    }\n\n    update(time: number) {\n        super.update(time);\n        this._frame = Math.floor((time - this.startTime) / 80);\n        if (this._frame > 12) {\n            this.active = false;\n        }\n    }\n\n    get facing(): number {\n        return this.t;\n    }\n\n    get frameIndex(): number {\n        return Math.min(this._frame, 12);\n    }\n\n    renderFrame(i: number, unit: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = unit;\n        canvas.height = unit;\n\n        const ctx = canvas.getContext('2d');\n        for (let j = 0; j < 3; ++j) {\n            const r = i - (2 * j) + 1;\n            if (r > 0 && r < 9) {\n                ctx.strokeStyle = `rgba(255,255,255,${1 - (r / 8)})`;\n                ctx.beginPath();\n                ctx.ellipse(unit / 2, unit / 2, r * unit / 16, r * unit / 16, 0, 0, 2 * Math.PI);\n                ctx.stroke();\n            }\n        }\n\n        return canvas;\n    }\n}\n","import { Sprite, FiniteSprite } from \".\";\nimport { Frog } from \"./frog\";\n\nexport class Splat extends Sprite implements FiniteSprite {\n    active: boolean = true;\n    startTime: number;\n\n    constructor(r:number, t:number, time: number) {\n        super(r, t, 0);\n        this.startTime = time;\n    }\n\n    update(time: number) {\n        super.update(time);\n        if (time - this.startTime > 960) {\n            this.active = false;\n        }\n    }\n\n    get facing(): number {\n        return this.t;\n    }\n\n    renderFrame(i: number, unit: number): HTMLCanvasElement {\n        return Frog.render(unit, '#333300');\n    }\n}\n","import { Sprite, FiniteSprite } from \".\";\n\nexport class Home extends Sprite implements FiniteSprite {\n    active: boolean = true;\n    startTime: number;\n    private _frame: number;\n\n    constructor(i:number, time: number) {\n        super(20, Home.angle(i), 0);\n        this.startTime = time;\n    }\n\n    update(time: number) {\n        super.update(time);\n        this._frame = Math.floor((time - this.startTime) / 80);\n        if (this._frame > 12) {\n            this.active = false;\n        }\n    }\n\n    get facing(): number {\n        return this.t;\n    }\n\n    get frameIndex(): number {\n        return Math.min(this._frame, 12);\n    }\n\n    renderFrame(i: number, unit: number): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = unit * 24;\n        canvas.height = 15 * unit;\n\n        const ctx = canvas.getContext('2d');\n        ctx.fillStyle = '#782800';\n        ctx.fillRect(unit * 6, unit * 25 / 4, unit * 3 / 2, unit * 5 / 2);\n        ctx.fillStyle = '#a23600';\n        ctx.beginPath();\n        ctx.moveTo(unit * 6, unit * 25 / 4);\n        ctx.lineTo(unit * 27 / 4, unit * 26 / 4);\n        ctx.lineTo(unit * 27 / 4, unit * 34 / 4);\n        ctx.lineTo(unit * 6, unit * 35 / 4);\n        ctx.fill();\n\n        ctx.fillStyle = '#963200';\n        ctx.beginPath();\n        ctx.moveTo(unit * 15 / 2, unit * 25 / 4);\n        ctx.lineTo(unit * 27 / 4, unit * 26 / 4);\n        ctx.lineTo(unit * 27 / 4, unit * 34 / 4);\n        ctx.lineTo(unit * 15 / 2, unit * 35 / 4);\n        ctx.fill();\n\n        ctx.fillStyle = '#cccccc';\n        for (let i = 0; i < 3; ++i) {\n            ctx.beginPath();\n            ctx.ellipse((unit * 4.15) + (i * unit * 3 / 4), unit * 15 / 2, unit * 5 / 16, unit * 3 / 8, 0, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n        const drawFence = () => {\n            ctx.beginPath();\n            ctx.moveTo(unit * 6.3, -unit * 3);\n            ctx.arc(-8 * unit, unit * 15 / 2, unit * 11.75, - 0.55, 0.55);\n            ctx.lineTo(unit * 6.3, unit * 18);\n        }\n\n        ctx.strokeStyle = '#ffffff';\n        drawFence();\n        ctx.stroke();\n        ctx.setLineDash([unit / 8, unit / 8]);\n        ctx.lineWidth = 3;\n        drawFence()\n        ctx.stroke();\n\n        return canvas;\n    }\n\n    static angle(i):number {\n        return Math.PI * ((1/4) + (i / 2));\n    }\n}\n","import { Model } from \".\";\n\nexport class PendingResult<TResult> implements Model {\n    startTime: number;\n    duration: number;\n    data: TResult;\n    progress: number;\n\n    constructor(data: TResult, duration: number) {\n        this.duration = duration;\n        this.data = data;\n        this.progress = 0;\n    }\n\n    update(time: number) {\n        if (!this.startTime) {\n            this.startTime = time;\n        } else {\n            this.progress = Math.min(1, (time - this.startTime) / this.duration);\n        }\n    }\n}","import { Model } from \".\";\nimport { Level } from \"./level\";\nimport { Frog } from \"../sprites/frog\";\nimport { angularDistance } from \"./helpers\";\nimport { Splosh } from \"../sprites/splosh\";\nimport { FiniteSprite } from \"../sprites\";\nimport { Splat } from \"../sprites/splat\";\nimport { Home } from \"../sprites/home\";\nimport * as sounds from '../sounds';\nimport { GameData } from \"./gameData\";\nimport { PendingResult } from \"./pendingResult\";\n\nexport default class implements Model {\n    debug: boolean = false;\n    grid = [\n        { tiles: 1, type: 'land', speed: 0.1 * Math.PI },\n        { tiles: 6, type: 'pond', speed: 0.15 * Math.PI },\n        { tiles: 12, type: 'pond', speed: 0.2 * Math.PI },\n        { tiles: 24, type: 'pond', speed: -0.3 * Math.PI },\n        { tiles: 24, type: 'pond', speed: -0.4 * Math.PI },\n        { tiles: 24, type: 'pond', speed: -0.3 * Math.PI },\n        { tiles: 48, type: 'land' },\n        { tiles: 48, type: 'road', speed: 0.15 * Math.PI },\n        { tiles: 48, type: 'road', speed: 0.2 * Math.PI },\n        { tiles: 48, type: 'road', speed: 0.25 * Math.PI },\n        { tiles: 48, type: 'road', speed: 0.2 * Math.PI },\n        { tiles: 48, type: 'road', speed: 0.15 * Math.PI },\n        { tiles: 1, type: 'home' }\n    ];\n    level: Level;\n    frog: Frog;\n    fate: FiniteSprite;\n    maxR: number;\n    score: number;\n    lives: number = 3;\n    pendingResult: PendingResult<GameData> = null;\n    result: GameData = null;\n\n    constructor(data: GameData) {\n        if (data.nextLevel === -1) {\n            this.level = new Level(1);\n            this.score = 0;\n        } else {\n            this.level = new Level(data.nextLevel);\n            this.score = data.score;\n        }\n        \n        this.maxR = 0;\n        this.startAttempt();\n    }\n\n    startAttempt() {\n        this.level.populate(this.grid);\n        this.frog = new Frog(0, 0, 0);\n    }\n\n    checkScore() {\n        if (this.frog.active && this.frog.r > this.maxR) {\n            this.maxR = this.frog.r;\n            return 10;\n        }\n        return 0;\n    }\n    \n    update(time: number) {\n        let sound = this.frog.lastSound;\n        this.frog.lastSound = null;\n\n        if (this.frog.active) {\n            if (this.grid[this.frog.r].type === 'home') {\n                let home = null;\n                for (let i = 0; i < 4; ++i) {\n                    if (angularDistance(Home.angle(i), this.frog.t) < Math.PI * 3 / 16) {\n                        home = i;\n                        break;\n                    }\n                }\n\n                if (home === null || this.level.homes[home]) {\n                    this.frog.r -= 1;\n                    sound = sounds.block;\n                } else {\n                    const newHome = new Home(home, time)\n                    this.fate = newHome;\n                    this.level.homes[home] = newHome;\n                    this.score += 400;\n                    this.maxR = 0;\n                    this.frog.end();\n                    sound = sounds.home;\n                }\n            }\n\n            switch (this.grid[this.frog.r].type) {\n                case 'land':\n                    this.frog.speed = 0;\n                    break;\n                case 'pond':\n                    let onLily = false;\n                    for (let lily of this.level.lilies) {\n                        if (this.frogCollidesWith(lily)) {\n                            this.frog.t = lily.t;\n                            this.frog.speed = lily.speed;\n                            onLily = true;\n                            break;\n                        }\n                    }\n                    if (!onLily && !this.debug) {\n                        this.lives -= 1;\n                        this.fate = new Splosh(this.frog.r, this.frog.t, time);\n                        this.frog.end();\n                        sound = sounds.splosh;\n                    }\n\n                    this.score += this.checkScore();\n                    break;\n                case 'road':\n                    this.frog.speed = 0;\n                    for (let car of this.level.cars) {\n                        if (this.frogCollidesWith(car) && !this.debug) {\n                            this.lives -= 1;\n                            this.fate = new Splat(this.frog.r, this.frog.t, time);\n                            this.frog.end();\n                            sound = sounds.splat;\n                            break;\n                        }\n                    }\n\n                    this.score += this.checkScore();\n                    break;\n            }\n        } else {\n            this.frog.speed = 0;\n        }\n\n        if (this.fate) {\n            this.fate.update(time);\n            if (!this.fate.active) {\n                if (this.lives === 0) {\n                    this.pendingResult = new PendingResult<GameData>(\n                        { nextLevel: -1, score: this.score},\n                        1500);\n                    sounds.gameOver.play();\n                } else if (this.level.completed()) {\n                    this.pendingResult = new PendingResult<GameData>(\n                        { nextLevel: this.level.difficulty + 1, score: this.score},\n                        1500);\n                    sounds.levelWin.play();\n                } else {\n                    this.startAttempt();\n                }\n\n                this.fate = null;\n            }\n        }\n\n        if (this.pendingResult) {\n            this.pendingResult.update(time);\n            if (this.pendingResult.progress === 1) {\n                this.result = this.pendingResult.data;\n                this.pendingResult = null;\n            }\n        }\n\n        this.level.update(time);\n        this.frog.update(time);\n\n        if (sound) {\n            sound.getAudio().play();\n        }\n    }\n\n    toggleDebug() {\n        this.debug = !this.debug;\n    }\n\n    private frogCollidesWith(sprite) {\n        return this.frog.r === sprite.r &&\n            angularDistance(sprite.t, this.frog.t) < 0.45 / sprite.r;\n    }\n}\n","export class CanvasRenderingContextPolar2D {\n    context: CanvasRenderingContext2D;\n\n    private constructor(context: CanvasRenderingContext2D) {\n        this.context = context;\n    }\n\n    static create(canvas: HTMLCanvasElement) {\n        const cartesianContext = canvas.getContext('2d');\n        cartesianContext.translate(canvas.width / 2, canvas.height / 2);\n        cartesianContext.rotate(-Math.PI / 2);\n        return new CanvasRenderingContextPolar2D(cartesianContext);\n    }\n\n    set fillStyle(value) {\n        this.context.fillStyle = value;\n    }\n\n    set strokeStyle(value) {\n        this.context.strokeStyle = value;\n    }\n\n    set lineWidth(value: number) {\n        this.context.lineWidth = value;\n    }\n\n    setLineDash(segments: number[]) {\n        this.context.setLineDash(segments);\n    }\n\n    save() {\n        this.context.save();\n    }\n    restore() {\n        this.context.restore();\n    }\n\n    beginPath() {\n        this.context.beginPath();\n    }\n\n    lineTo(r: number, t: number) {\n        const {x, y} = this.convert(r, t);\n        this.context.lineTo(x, y);\n    }\n\n    moveTo(r: number, t: number) {\n        const {x, y} = this.convert(r, t);\n        this.context.moveTo(x, y);\n    }\n\n    stroke() {\n        this.context.stroke();\n    }\n\n    circle(radius: number) {\n        this.context.beginPath();\n        this.context.arc(0, 0, radius, 0, 2 * Math.PI);\n        this.context.stroke();\n    }\n    \n    fillCircle(radius: number) {\n        this.context.beginPath();\n        this.context.arc(0, 0, radius, 0, 2 * Math.PI);\n        this.context.fill();\n    };\n\n    drawSprite(sprite: HTMLCanvasElement, r: number, t: number, rotation: number, scale: number) {\n        const {x, y} = this.convert(r, t);\n        this.context.save();\n        this.context.translate(x, y);\n        this.context.scale(scale, scale);\n        this.context.rotate(rotation);\n        this.context.drawImage(sprite, -sprite.width / 2, -sprite.height / 2);\n        this.context.restore();\n    }\n\n    private convert(r: number, t: number) {\n        return {\n            x: r * Math.cos(t),\n            y: r * Math.sin(t)\n        }\n    }\n}","import { View } from '.';\nimport GameModel from '../models/game';\nimport { CanvasRenderingContextPolar2D } from './helpers/polar';\nimport { Sprite } from '../sprites';\nimport colours from './colours';\n\nexport default class implements View<GameModel> {\n    context: CanvasRenderingContextPolar2D;\n    width: number;\n    height: number;\n    unit: number;\n    mask: HTMLCanvasElement;\n    lives: HTMLElement;\n    score: HTMLElement;\n\n    constructor(canvas: HTMLCanvasElement, lives: HTMLElement, score: HTMLElement) {\n        this.width = canvas.width;\n        this.height = canvas.height;\n        this.unit = Math.floor(Math.min(canvas.width, canvas.height) / 24);\n\n        this.context = CanvasRenderingContextPolar2D.create(canvas);\n        this.mask = this.renderMask();\n        this.lives = lives;\n        this.score = score;\n    }\n    \n    render(model: GameModel) {\n        this.context.fillStyle = colours.LAND;\n        this.context.fillCircle(this.unit * 24);\n\n        this.context.fillStyle = colours.ROAD;\n        this.context.context.fillRect(-this.width / 2, -this.unit * 5 / 2, this.width, (this.unit * 5));\n        this.context.context.fillRect(-this.unit * 5 / 2, -this.width / 2, (this.unit * 5), this.width);\n\n        let lastType = null;\n        for (let i = model.grid.length - 1; i >= 0; --i) {\n            const type = model.grid[i].type\n\n            if (type === 'home') {\n                continue;\n            }\n\n            this.context.fillStyle = {\n                'road': colours.ROAD,\n                'land': colours.LAND,\n                'pond': colours.POND\n            }[type];\n\n            this.context.fillCircle(this.unit * (i + 1/2));\n\n            if (type === 'road' && lastType === 'road') {\n                const circumference = Math.PI * (1 + 2*i);\n                const dashLength = (circumference / Math.round(circumference / (this.unit * 2))) / 2;\n\n                this.context.save();\n                this.context.setLineDash([dashLength, dashLength]);\n                this.context.strokeStyle = '#cccccc';\n                this.context.lineWidth = 2;\n                this.context.circle(this.unit * (i + 1/2));\n                this.context.setLineDash([]);\n                this.context.restore();\n            }\n\n            lastType = type;\n        }\n\n        this.lives.innerText = ' 🐸'.repeat(model.lives);\n        this.score.innerText = model.score.toString(10);\n\n        for (const home of model.level.homes) {\n            if (home) {\n                this.renderSprite(home);\n            }\n        }\n\n        if (model.fate) {\n            this.renderSprite(model.fate);\n        }\n\n        for (let lily of model.level.lilies) {\n            this.renderSprite(lily);\n        }\n\n        for (let car of model.level.cars) {\n            this.renderSprite(car);\n        }\n\n        if (model.frog.active) {\n            this.renderSprite(model.frog);\n        }\n\n        if (!model.debug) {\n            let scale = 1;\n\n            if (model.pendingResult) {\n                const scaleDirection =\n                    model.pendingResult.data.nextLevel / Math.abs(model.pendingResult.data.nextLevel);\n\n                scale = (scaleDirection == 1 ? 7.5 : 20) ** (scaleDirection * model.pendingResult.progress);\n            }\n\n            this.renderImageForSprite(this.mask, model.frog, scale);\n\n            if (scale < 1) {\n                for (let s = scale * 1.5; s < 1.5; s *= 1.5) {\n                    this.renderImageForSprite(this.mask, model.frog, s);\n                }\n            }\n        } else {\n            this.context.strokeStyle = '#ffcc33';\n            for (let i = 1; i < model.grid.length; ++i) {\n                const row = model.grid[i];\n                const fromR = this.unit * (1 + (2 * (i - 1))) / 2;\n                const toR = fromR + this.unit;\n                this.context.circle(fromR);\n                const step = 2 * Math.PI / row.tiles;\n                const offset = 1 / 2;\n                for (let j = 0; j < row.tiles; ++j) {\n                    this.context.beginPath()\n                    this.context.moveTo(fromR, (offset + j) * step);\n                    this.context.lineTo(toR, (offset + j) * step);\n                    this.context.stroke();\n                }\n            }\n        }\n    }\n\n    private renderSprite(sprite: Sprite) {\n        this.renderImageForSprite(sprite.getCurrentFrame(this.unit), sprite, 1);\n    }\n\n    private renderImageForSprite(image: HTMLCanvasElement, sprite: Sprite, scale: number) {\n        this.context.drawSprite(image, sprite.r * this.unit, sprite.t, sprite.facing, scale);\n    }\n\n    private renderMask() {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.unit * 64;\n        canvas.height = this.unit * 64;\n    \n        const ctx = canvas.getContext('2d');\n        ctx.fillStyle = '#ffffff';\n    \n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n        ctx.globalCompositeOperation = 'xor';\n    \n        ctx.filter = `blur(${this.unit}px)`;\n    \n        ctx.beginPath();\n        ctx.ellipse(\n            (this.unit * 3) + (canvas.width / 2),\n            canvas.height / 2,\n            this.unit * 9,\n            this.unit * 6,\n            0,\n            0,\n            2 * Math.PI);\n\n        ctx.fill();\n    \n        return canvas;\n    }\n}","import GameModel from '../models/game';\nimport GameView from '../views/game';\nimport { Controller } from '.';\nimport { GameData } from '../models/gameData';\n\nconst getScale = (): number => Math.round(document.getElementById('root').offsetHeight * 12 / 13);\n\nexport default class implements Controller<GameData> {\n    keyHandler: (event: any) => void;\n    canvas: HTMLCanvasElement;\n    stats: HTMLElement;\n    lives: HTMLElement;\n    score: HTMLElement;\n    onExit: (GameData) => void;\n    view: GameView;\n    startTime: number;\n    model: GameModel;\n    initView: () => void;\n\n    enter(exitCallback, data) {\n        this.onExit = exitCallback;\n\n        const root = document.getElementById('root');\n\n        this.canvas = document.createElement('canvas');\n        this.canvas.id = 'game';\n    \n        this.stats = document.createElement('dl');\n        this.stats.id = 'stats';\n\n        const livesTerm = document.createElement('dt');\n        livesTerm.innerText = 'Lives:';\n        this.lives = document.createElement('dd');\n        this.lives.classList.add('lives');\n\n        const scoreTerm = document.createElement('dt');\n        scoreTerm.innerText = 'Score:';\n        this.score = document.createElement('dd');\n\n        this.stats.appendChild(livesTerm);\n        this.stats.appendChild(this.lives);\n        this.stats.appendChild(scoreTerm);\n        this.stats.appendChild(this.score);\n\n        this.model = new GameModel(data);\n    \n        this.initView();\n\n        window.addEventListener('resize', this.initView);\n        window.addEventListener('keydown', this.keyHandler);\n        root.appendChild(this.stats);\n        root.appendChild(this.canvas);\n\n        this.startTime = Date.now();\n    }\n\n    update() {\n        const gameTime = Date.now() - this.startTime;\n        this.model.update(gameTime);\n        if (this.model.result) {\n            this.exit(this.model.result);\n        } else {\n            this.view.render(this.model);\n        }\n    }\n\n    exit(result: GameData) {\n        const root = document.getElementById('root');\n        root.removeChild(this.canvas);\n        root.removeChild(this.stats);\n        window.removeEventListener('keydown', this.keyHandler);\n        window.removeEventListener('resize', this.initView);\n        this.onExit(result);\n    }\n\n    constructor() {\n        this.initView = () => {\n            this.canvas.width = getScale();\n            this.canvas.height = getScale();\n            this.view = new GameView(this.canvas, this.lives, this.score);\n        }\n\n        this.keyHandler = event => {\n            if (event.repeat) {\n                return;\n            }\n            switch (event.code) {\n                case 'KeyW':\n                case 'ArrowUp':\n                    this.model.frog.moveOut();\n                    break;\n                case 'KeyA':\n                case 'ArrowLeft':\n                    this.model.frog.moveAntiClockwise();\n                    break;\n                case 'KeyS':\n                case 'ArrowDown':\n                    this.model.frog.moveIn();\n                    break;\n                case 'KeyD':\n                case 'ArrowRight':\n                    this.model.frog.moveClockwise();\n                    break;\n                case 'Delete':\n                    if (event.ctrlKey) {\n                        this.model.toggleDebug();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n}","import GameController from './controllers/game';\nimport TitleController from './controllers/title';\nimport { Controller } from './controllers';\nimport { GameData } from './models/gameData';\n\nexport default () => {\n    let currentController: Controller<GameData>;\n    let animate: () => void;\n\n    let titleController = new TitleController();\n    let gameController = new GameController();\n\n    const enterTitle = (gameData) => {\n        currentController = titleController;\n        titleController.enter(enterGame, gameData);\n    };\n\n    const enterGame = (gameData) => {\n        currentController = gameController;\n        gameController.enter(enterTitle, gameData);\n    }\n    \n    enterTitle({ nextLevel: 1, score: 0 });\n\n    animate = () => {\n        currentController.update();\n        window.requestAnimationFrame(animate);\n    }\n    window.requestAnimationFrame(animate);\n};","import { Controller } from \".\";\nimport { GameData } from \"../models/gameData\";\n\nexport default class implements Controller<GameData> {\n    handler: (event: any) => void;\n    onExit: (data: GameData) => void;\n    currentData: GameData;\n    startTime: number;\n    listening: boolean;\n    messageHolder: HTMLElement;\n    messages: string[] = [];\n\n    enter(exitCallback: (data: GameData) => void, data: GameData) {\n        this.messages = [];\n\n        const title = document.getElementById('title');\n        title.style.display = 'block';\n\n        const heading = title.firstElementChild as HTMLElement;\n        this.messageHolder = document.createElement('p');\n        title.appendChild(this.messageHolder);\n\n        if (data.nextLevel === -1){\n            heading.innerText = 'Game Over';\n            const previousHighScore = parseInt(localStorage.getItem('highScore') || '0', 10);\n            if (data.score > previousHighScore) {\n                localStorage.setItem('highScore', data.score.toString(10));\n            }\n            this.messages.push(`Score: ${data.score}`);\n        } else if (data.nextLevel === 1) {\n            heading.innerText = 'Loop Frog';\n            this.messages.push('Controls: arrow keys or W/A/S/D');\n        } else {\n            heading.innerText = `Level ${data.nextLevel}`\n            this.messages.push(`Score: ${data.score}`);\n        }\n\n        if (data.nextLevel < 2) {\n            const highScore = localStorage.getItem('highScore');\n            if (highScore !== null) {\n                this.messages.push(`High score: ${highScore}`);\n            }\n        }\n\n        this.currentData = data;\n        this.onExit = exitCallback;\n\n        this.startTime = Date.now();\n        this.listening = false;\n    }\n\n    update() {\n        if (!this.listening && Date.now() > this.startTime + 750) {\n            const title = document.getElementById('title');\n            const instruction = document.createElement('p');\n\n            let verb = 'continue';\n            if (this.currentData.nextLevel === 1) {\n                verb = 'start';\n            } else if (this.currentData.nextLevel === -1) {\n                verb = 'play again';\n            }\n\n            instruction.innerText = `Press any key to ${verb}`;\n\n            title.appendChild(instruction);\n            window.addEventListener('keydown', this.handler);\n            this.listening = true;\n        }\n\n        this.messageHolder.innerText =\n            this.messages[Math.floor((Date.now() - this.startTime) / 2250) % this.messages.length];\n    }\n\n    exit() {\n        const title = document.getElementById('title');\n        \n        while (title.lastElementChild.tagName.toLowerCase() === 'p') {\n            title.removeChild(title.lastElementChild);\n        }\n\n        title.style.display = 'none';\n\n        window.removeEventListener('keydown', this.handler);\n        this.onExit(this.currentData);\n    }\n\n    constructor() {\n        this.handler = () => {\n            this.exit();\n        }\n    }\n}"],"names":["angularDistance","t1","t2","Math","min","PI","Sprite","r","t","speed","$b3b99d6e342559fb15121c67fa59081$var$_classCallCheck","this","time","lastUpdate","unit","frameIndex","_renderUnit","_frames","renderFrame","Lily","_this","$dcbc2fc93b62bb5cb31a7bfd073296$var$_classCallCheck","_super","call","_facing","random","$dcbc2fc93b62bb5cb31a7bfd073296$var$_get","$dcbc2fc93b62bb5cb31a7bfd073296$var$_getPrototypeOf","prototype","i","canvas","document","createElement","width","height","ctx","getContext","fillStyle","$a309d497e6c93415529aa3cfa46$export$default","beginPath","moveTo","bezierCurveTo","arc","fill","Car","$df82ec3c6ec2a65097fada5d4c41fe5$var$_classCallCheck","$df82ec3c6ec2a65097fada5d4c41fe5$var$_get","$df82ec3c6ec2a65097fada5d4c41fe5$var$_getPrototypeOf","fillRect","lineTo","Level","difficulty","$adb9f60c039c3cfff3cedc27cde52438$var$_classCallCheck","homes","grid","lilies","cars","_loop","type","length","populateRow","floor","push","$dcbc2fc93b62bb5cb31a7bfd073296$export$Lily","$df82ec3c6ec2a65097fada5d4c41fe5$export$Car","spaces","density","addAtAngle","step","offset","allSpaces","arr","$fa98da9e4627965d398d9ef69f877c$export$range","array","j","_ref","$fa98da9e4627965d398d9ef69f877c$export$shuffle","max","round","_step","_iterator","$adb9f60c039c3cfff3cedc27cde52438$var$_createForOfIteratorHelper","s","n","done","value","update","err","e","f","_step2","_iterator2","gameOver","getElementById","levelWin","jumpR","SoundEffect","oldParams","wave_type","p_env_attack","p_env_sustain","p_env_punch","p_env_decay","p_base_freq","p_freq_limit","p_freq_ramp","p_freq_dramp","p_vib_strength","p_vib_speed","p_arp_mod","p_arp_speed","p_duty","p_duty_ramp","p_repeat_speed","p_pha_offset","p_pha_ramp","p_lpf_freq","p_lpf_ramp","p_lpf_resonance","p_hpf_freq","p_hpf_ramp","sound_vol","sample_rate","sample_size","generate","jumpT","p_vib_delay","block","splat","splosh","home","Frog","colour","strokeStyle","lineWidth","lineCap","stroke","ellipse","active","jumpAngle","lastSound","$b75813a76c471b7804695d0acf3e9b5$export$jumpT","$b75813a76c471b7804695d0acf3e9b5$export$jumpR","render","Splosh","$eae8a5e649051e7c2302406e7f49d0d4$var$_classCallCheck","$eae8a5e649051e7c2302406e7f49d0d4$var$_assertThisInitialized","startTime","$eae8a5e649051e7c2302406e7f49d0d4$var$_get","$eae8a5e649051e7c2302406e7f49d0d4$var$_getPrototypeOf","_frame","concat","Splat","$a492300cb031136e6d20661b75d3abe$var$_classCallCheck","$a492300cb031136e6d20661b75d3abe$var$_assertThisInitialized","$a492300cb031136e6d20661b75d3abe$var$_get","$a492300cb031136e6d20661b75d3abe$var$_getPrototypeOf","$b3e03745987f8473a60c08a0e04d796d$export$Frog","Home","$ccb82f409db86b401effa4548e7dffe$var$_classCallCheck","angle","$ccb82f409db86b401effa4548e7dffe$var$_assertThisInitialized","$ccb82f409db86b401effa4548e7dffe$var$_get","$ccb82f409db86b401effa4548e7dffe$var$_getPrototypeOf","drawFence","setLineDash","PendingResult","data","duration","$ae5902c146fbd822a68d7d3f9fe863e6$var$_classCallCheck","progress","_default","$b854da4e7d190f9c837934ee12c7557a$var$_classCallCheck","$b854da4e7d190f9c837934ee12c7557a$var$_defineProperty","tiles","nextLevel","level","$adb9f60c039c3cfff3cedc27cde52438$export$Level","score","maxR","startAttempt","populate","frog","sound","$fa98da9e4627965d398d9ef69f877c$export$angularDistance","$ccb82f409db86b401effa4548e7dffe$export$Home","$b75813a76c471b7804695d0acf3e9b5$export$block","newHome","fate","end","$b75813a76c471b7804695d0acf3e9b5$export$home","onLily","$b854da4e7d190f9c837934ee12c7557a$var$_createForOfIteratorHelper","lily","frogCollidesWith","debug","lives","$eae8a5e649051e7c2302406e7f49d0d4$export$Splosh","$b75813a76c471b7804695d0acf3e9b5$export$splosh","checkScore","car","$a492300cb031136e6d20661b75d3abe$export$Splat","$b75813a76c471b7804695d0acf3e9b5$export$splat","pendingResult","$ae5902c146fbd822a68d7d3f9fe863e6$export$PendingResult","$b75813a76c471b7804695d0acf3e9b5$export$gameOver","play","completed","$b75813a76c471b7804695d0acf3e9b5$export$levelWin","result","getAudio","sprite","CanvasRenderingContextPolar2D","context","$b365bda0fe765c7241c29d0ab9231$var$_classCallCheck","cartesianContext","translate","rotate","segments","save","restore","_this$convert","convert","x","y","_this$convert2","radius","rotation","scale","_this$convert3","drawImage","cos","sin","$fc494658d1f58f7abb4e39bb1318ed5$var$_classCallCheck","$b365bda0fe765c7241c29d0ab9231$export$CanvasRenderingContextPolar2D","create","mask","renderMask","model","fillCircle","lastType","road","land","pond","circumference","dashLength","circle","innerText","repeat","toString","$fc494658d1f58f7abb4e39bb1318ed5$var$_createForOfIteratorHelper","renderSprite","_step3","_iterator3","row","fromR","toR","scaleDirection","abs","pow","renderImageForSprite","getCurrentFrame","image","drawSprite","facing","globalCompositeOperation","filter","getScale","offsetHeight","$d23398e723ba354fa35062e9ac6bd26f$var$_classCallCheck","initView","view","$fc494658d1f58f7abb4e39bb1318ed5$export$default","keyHandler","event","code","moveOut","moveAntiClockwise","moveIn","moveClockwise","ctrlKey","toggleDebug","exitCallback","onExit","root","id","stats","livesTerm","classList","add","scoreTerm","appendChild","$b854da4e7d190f9c837934ee12c7557a$export$default","window","addEventListener","Date","now","gameTime","exit","removeChild","removeEventListener","currentController","animate","titleController","gameController","enterTitle","enterGame","$a53a983d405d4135871e4a83016338d1$var$_classCallCheck","handler","messages","title","style","display","heading","firstElementChild","messageHolder","previousHighScore","parseInt","localStorage","getItem","setItem","highScore","currentData","listening","instruction","verb","lastElementChild","tagName","toLowerCase","$d23398e723ba354fa35062e9ac6bd26f$export$default","gameData","enter","requestAnimationFrame"],"version":3,"file":"ld47.eb1c53c5.js.map"}